<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Mikayla&#39;s Project Updates</title>
    <link>https://mikayla-maki.github.io/</link>
    <description>Recent content on Mikayla&#39;s Project Updates</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 Mar 2022 23:59:28 -0700</lastBuildDate><atom:link href="https://mikayla-maki.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Term Paper</title>
      <link>https://mikayla-maki.github.io/posts/term-paper/</link>
      <pubDate>Fri, 18 Mar 2022 23:59:28 -0700</pubDate>
      
      <guid>https://mikayla-maki.github.io/posts/term-paper/</guid>
      <description>This is a copy of the term paper I wrote for a class on internet markets. I&amp;rsquo;m copying it here because it distills the last 6 months of research I&amp;rsquo;ve done into my current working opinions and plans.
Mikayla Maki, CS-410: Internet Markets Term Paper Managing byzantine faults is a fundamental challenge for any distributed system. From the double spend problem, to sybil attacks, their existence sets hard limits on what is possible to coordinate.</description>
    </item>
    
    <item>
      <title>P2P Browser</title>
      <link>https://mikayla-maki.github.io/posts/p2p-browser/</link>
      <pubDate>Sat, 22 Jan 2022 15:04:11 -0800</pubDate>
      
      <guid>https://mikayla-maki.github.io/posts/p2p-browser/</guid>
      <description>Assumptions: (what is this?)
 Client-server architecture needs to be replaced by P2P  I&amp;rsquo;ve been seeing a lot of talk from smart people about how to do a p2p internet properly, and I want to throw my own architecture proposal into the ring. My goal is to surpass the ease of use and accessibility of modern social media apps, while also structurally distributing power to users (also referred to as &amp;lsquo;peers&amp;rsquo;).</description>
    </item>
    
    <item>
      <title>M&#39;s Idea Graph Format Specifier</title>
      <link>https://mikayla-maki.github.io/posts/ms-idea-graph-format-specifier/</link>
      <pubDate>Sat, 22 Jan 2022 14:25:52 -0800</pubDate>
      
      <guid>https://mikayla-maki.github.io/posts/ms-idea-graph-format-specifier/</guid>
      <description>In my brain, ideas are embedded in a network of implications, assumptions, and statements. But it&amp;rsquo;s hard to keep the whole shape of it in my head at once. I&amp;rsquo;m much more comfortable relaxing into the stream of inferences and letting the implications guide me to wherever the ideas lie. But to become my best self, I need to start telling people these ideas and engaging in discourses. Otherwise, I risk letting my own biases paper over the holes in my logic.</description>
    </item>
    
    <item>
      <title>Axioms of Action</title>
      <link>https://mikayla-maki.github.io/posts/axioms-of-action/</link>
      <pubDate>Fri, 07 Jan 2022 15:44:18 -0800</pubDate>
      
      <guid>https://mikayla-maki.github.io/posts/axioms-of-action/</guid>
      <description>Existence is philosophically difficult. What if we&amp;rsquo;re all in a simulation? What if we can&amp;rsquo;t truly know anything? What if nothing we do matters? To cut through this miasma I choose to put my faith in 3 axioms:
 Reality exists. Reality is perceivable. Reality can be effected.  Each of these statements bundles in the baseline philosophical claims that I need to logically convince my brain that it&amp;rsquo;s worthwhile to get out of bed.</description>
    </item>
    
    <item>
      <title>Rust Type System</title>
      <link>https://mikayla-maki.github.io/posts/rust-type-system/</link>
      <pubDate>Sun, 05 Dec 2021 12:30:53 -0800</pubDate>
      
      <guid>https://mikayla-maki.github.io/posts/rust-type-system/</guid>
      <description>I&amp;rsquo;ve been fucking around and avoiding my finals by getting caught up on the first 5 days of the advent of code. Because I hate my brain, I have decided that it would be fun to learn how to write functional code in Rust, specifically for Day 3 Part 2.
Functional Rust is terrifying.
Look at this function header I just wrote:
fn get_diagnostic_value&amp;lt;F&amp;gt;(bit_criteria: F, bit_index: usize, mut diagnostic_values: Vec&amp;lt;Vec&amp;lt;bool&amp;gt;&amp;gt;, bit_counts: [(i32, i32); 12]) -&amp;gt; Vec&amp;lt;bool&amp;gt; where F: Fn([(i32, i32); 12]) -&amp;gt; Box&amp;lt;dyn Fn(&amp;amp;Vec&amp;lt;bool&amp;gt;) -&amp;gt; bool&amp;gt; { Why do I do this to myself.</description>
    </item>
    
    <item>
      <title>Drag and Drop Woes</title>
      <link>https://mikayla-maki.github.io/posts/drag-and-drop-woes/</link>
      <pubDate>Thu, 11 Nov 2021 11:11:24 -0800</pubDate>
      
      <guid>https://mikayla-maki.github.io/posts/drag-and-drop-woes/</guid>
      <description>Discord Transcript (future posts will be shared here first probably, maybe):
Working on a react-redux app, and I cannot use toolkit :(, and I&amp;rsquo;m having a lot of problem managing stale state in my app, but I think I have a solution.
I have a trello clone and I need to implement drag and drop, this means I that I have to have a virtual sort order for my lists and cards that isn&amp;rsquo;t &amp;lsquo;committed&amp;rsquo; to redux (and therefore saved to the browser) until after the drag and drop has ended.</description>
    </item>
    
    <item>
      <title>Cello Dnd Update</title>
      <link>https://mikayla-maki.github.io/posts/cello-dnd-update/</link>
      <pubDate>Tue, 09 Nov 2021 12:10:51 -0800</pubDate>
      
      <guid>https://mikayla-maki.github.io/posts/cello-dnd-update/</guid>
      <description>Copy-and-Paste from Discord:
I AM SO CLOSE
React DnD has been a tough library to learn, especially because I&amp;rsquo;m new to everything and regretting some earlier decisions
BUT I am succeeding. I have Drag and Drop working (with bad UX) for cards in the same list, after much hair pulling.
Now I just have to re-do all that work, for the other two data sets, and then do something a little weird to enable cross-list dropping.</description>
    </item>
    
  </channel>
</rss>
